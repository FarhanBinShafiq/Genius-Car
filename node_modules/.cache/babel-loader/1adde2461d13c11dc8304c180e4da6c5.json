{"ast":null,"code":"import _slicedToArray from\"C:/Users/Md.Farhan Bin Shafiq/projects/Genius-Car/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{getAuth,signInWithPopup,GoogleAuthProvider,signOut,onAuthStateChanged}from\"firebase/auth\";import{useState,useEffect}from'react';import initializeAuthentication from'./../Pages/Login/Firebase/firebase.init';initializeAuthentication();var useFirebase=function useFirebase(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var auth=getAuth();var signInUsingGoogle=function signInUsingGoogle(){setIsLoading(true);var googleProvider=new GoogleAuthProvider();signInWithPopup(auth,googleProvider).then(function(result){setUser(result.user);}).finally(function(){return setIsLoading(false);});};// observe user state change\nuseEffect(function(){var unsubscribed=onAuthStateChanged(auth,function(user){if(user){setUser(user);}else{setUser({});}setIsLoading(false);});return function(){return unsubscribed;};},[]);var logOut=function logOut(){setIsLoading(true);signOut(auth).then(function(){}).finally(function(){return setIsLoading(false);});};return{user:user,isLoading:isLoading,signInUsingGoogle:signInUsingGoogle,logOut:logOut};};export default useFirebase;","map":{"version":3,"sources":["C:/Users/Md.Farhan Bin Shafiq/projects/Genius-Car/src/hooks/useFirebase.js"],"names":["getAuth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","useState","useEffect","initializeAuthentication","useFirebase","user","setUser","isLoading","setIsLoading","auth","signInUsingGoogle","googleProvider","then","result","finally","unsubscribed","logOut"],"mappings":"wKAAA,OAASA,OAAT,CAAkBC,eAAlB,CAAmCC,kBAAnC,CAAuDC,OAAvD,CAAgEC,kBAAhE,KAA0F,eAA1F,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,wBAAP,KAAqC,yCAArC,CAEAA,wBAAwB,GAExB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,cAAwBH,QAAQ,CAAC,EAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,eAAkCL,QAAQ,CAAC,IAAD,CAA1C,yCAAOM,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,IAAI,CAAGb,OAAO,EAApB,CAEA,GAAMc,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5BF,YAAY,CAAC,IAAD,CAAZ,CACA,GAAMG,CAAAA,cAAc,CAAG,GAAIb,CAAAA,kBAAJ,EAAvB,CAEAD,eAAe,CAACY,IAAD,CAAOE,cAAP,CAAf,CACKC,IADL,CACU,SAAAC,MAAM,CAAI,CACZP,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP,CACH,CAHL,EAIKS,OAJL,CAIa,iBAAMN,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAJb,EAKH,CATD,CAWA;AACAN,SAAS,CAAC,UAAM,CACZ,GAAMa,CAAAA,YAAY,CAAGf,kBAAkB,CAACS,IAAD,CAAO,SAAAJ,IAAI,CAAI,CAClD,GAAIA,IAAJ,CAAU,CACNC,OAAO,CAACD,IAAD,CAAP,CACH,CAFD,IAGK,CACDC,OAAO,CAAC,EAAD,CAAP,CACH,CACDE,YAAY,CAAC,KAAD,CAAZ,CACH,CARsC,CAAvC,CASA,MAAO,kBAAMO,CAAAA,YAAN,EAAP,CACH,CAXQ,CAWN,EAXM,CAAT,CAaA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBR,YAAY,CAAC,IAAD,CAAZ,CACAT,OAAO,CAACU,IAAD,CAAP,CACKG,IADL,CACU,UAAM,CAAG,CADnB,EAEKE,OAFL,CAEa,iBAAMN,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAFb,EAGH,CALD,CAOA,MAAO,CACHH,IAAI,CAAJA,IADG,CAEHE,SAAS,CAATA,SAFG,CAGHG,iBAAiB,CAAjBA,iBAHG,CAIHM,MAAM,CAANA,MAJG,CAAP,CAMH,CA5CD,CA8CA,cAAeZ,CAAAA,WAAf","sourcesContent":["import { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { useState, useEffect } from 'react';\nimport initializeAuthentication from './../Pages/Login/Firebase/firebase.init';\n\ninitializeAuthentication();\n\nconst useFirebase = () => {\n    const [user, setUser] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n\n    const auth = getAuth();\n\n    const signInUsingGoogle = () => {\n        setIsLoading(true);\n        const googleProvider = new GoogleAuthProvider();\n\n        signInWithPopup(auth, googleProvider)\n            .then(result => {\n                setUser(result.user);\n            })\n            .finally(() => setIsLoading(false));\n    }\n\n    // observe user state change\n    useEffect(() => {\n        const unsubscribed = onAuthStateChanged(auth, user => {\n            if (user) {\n                setUser(user);\n            }\n            else {\n                setUser({})\n            }\n            setIsLoading(false);\n        });\n        return () => unsubscribed;\n    }, [])\n\n    const logOut = () => {\n        setIsLoading(true);\n        signOut(auth)\n            .then(() => { })\n            .finally(() => setIsLoading(false));\n    }\n\n    return {\n        user,\n        isLoading,\n        signInUsingGoogle,\n        logOut\n    }\n}\n\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}